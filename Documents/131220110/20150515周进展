污点数据检测方案
1.	污点数据作除模操作
	a)	对所有exp添加两种属性，分别是类型属性和是否可能 == 0的属性，在做（/）和（%）操作时对该属性进行检测并报错。
	b)	若右值被污染或未被污染但是除模数可能为0则左值记为污染。
2.	污点数据作数组下标
	a)	采用数据流操作，检测所有到达数组表达式A[condition_1][condition_2]···是否进行了数组越界检查
3.	野指针检测，假设存在内存函数，参数为p
	a)	如果p为局部变量且非参数，则检查函数内是否置空
	b)	如果p为全局变量，检查限定函数内p是否置空
	c)	如果p为函数参数，则p所在的函数在被调用时视为内存释放函数
	d)	检测p的别名
	e)	隐式释放（p=&a，a被释放）
4.	污点数据作内存操作length或offset
	a)	判断内存操作方式,遇到内存操作函数即进行检验
	b)	C++内存操作函数如下
		i.	void * memcpy ( void * destination, const void * source, size_t num )
		ii.	void * memmove ( void * destination, const void * source, size_t num )
		iii.	void * memset ( void * ptr, int value, size_t num ); 
		iv.	void * memchr (       void * ptr, int value, size_t num );
	v.	int memcmp ( const void * ptr1, const void * ptr2, size_t num );
5.	过程内污点数据传播（主要为赋值操作）
6.	过程间污点数据传播（参数调用以及返回值）
	a)	通过CFG将函数之间的调用关系整理成函数关系表，通过查表获取参数与返回值之间的污染关系
