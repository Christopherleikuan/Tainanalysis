指针的不同情况操作如下，还有其他情况的话再说
void f()
{
	Tainted_Attr *ptr_p, *ptr_a;//分别存了p和a的污染状况

	//p = &a;(p为指针，a为一般变量)
	
	ptr_p->~Tainted_Attr();
	ptr_p->setType(TYPE_POINTER);
	ptr_p->setPointer(ptr_a);	//会自动将p的污染属性设置为与a相同，且指针会指向a的条目
	
	
	//p = p + 1;(指针指向了下一个位置)
	if (ptr_p->getistemp() == false)//不是动态创建的变量
		ptr_p->setPointer(NULL);//将指针从本来指向的内存移开
	else
		ptr_p->settemp(false);

	
	//a = (*p) + b;(a，b为变量，p为指针)
	ptr_p->getPointerAttr(); //取得指向的变量的污染条目，之后用这个条目与b的取并

	//*p = a + b;
	ptr_p->getPointerAttr(); //取得指向的变量的污染条目，之后操作与一般变量相同

	//p = new int;(例如p指向了动态变量)
	Tainted_Attr *temp = new Tainted_Attr();
	ptr_p->~Tainted_Attr();
	ptr_p->setType(TYPE_POINTER);
	ptr_p->settemp(true);
	
}
